This is a plugin originally created by Twitchy on the TShock forums. It was then maintained by Olink, on the same forums. I've only updated it and added some things. In no way does this make me responsible for its continued life.

Updated for API version [1.12] for TShock ver. 4.0.

Ijwu Verstion 4:
    Removed return bool fromm BuffPlayer
    Added /questr remove

Ijwu Version 3:
    Added in Python Script reading using IronPython
        Requires some more DLLs to be placed in your main server folder.
            These are mandatory. Even if you don't script in Python.
        Automatically works for files with the .py extension.
        All functions are under the Functions namespace.
            Ex: Instead of "Private()" like in Lua, you will instead use "Functions.Private()"
    Added ChatAssistant integration
        If you don't have ChatAssistant installed and you attempt using CreateMenu() your script WILL crash.
        Find ChatAssistant here: http://tshock.co/xf/index.php?threads/1-12-chat-assistant.1538/
        Functions Added:
            CreateMenu(QPlayer Player, string title, dynamic menu)
                The title is the title of the menu. The "menu" argument is a list of dictionaries that you pass to the method.
                Each dictionary represents a menu option. 
                Each dictionary must contain the keys (string)"title", (int)"value" and (bool)"selectable".
                All other keys will be ignored.
                Lua Example: {{title = "Option 1", value = 0, selectable = true}, {title = "Option 2", value = 1, selectable = false}}
                Python Example: [{"title":"Option 1", "value":0, "selectable":True},{"title":"Option 2", "value":1, "selectable":False}]
                The result of the players choice can be found as Player.MenuOpion.
        Functions Changed:
            PartyHuntList
                Changed to allow for Python integration.
                Python list example: [["zombie",1],["skeleton",6]]
            

Ijwu Version 2:
    Changed how the Kill() function works.
        I didn't like how Twitchy did it.
            Expanding on that: It seemed much to complicated how it was being done. Each kill would be put into a list and if that mob happened to be on your objective list, then it would be removed from the objective list. This would have the kill list gain in length with each kill, even if the mob isn't on your objective list. (I think that's how he did it, anyway)
            My change was to make an objective list and just check each kill as it happens, if the kill is on the objective list then remove it from the objective list. Once the objective list is empty, complete the objective and move on.
    Added in Quest Parties.
        Allows for multiple quests to link and share kill counts.
        Allows for having multiple people run raids (boss fights, dungeons, etc)
    Functions added:
        AddParty(QPlayer Player, string PartyName)
            Adds the specified player to the specified party.
            It will create the party if it doesn't exist.
            
        PartyHunt(string PartyName, string NPC, int amount = 1)
            Adds the specified mob in the specified amount to the party's hunting list.
            Only the first call of this function will take effect as to stop duplicate calls due to multiple quest instances.
            Automatically deletes the party upon completion.
            Also stops the script until this objective is complete.
           
        PartyHuntList(string PartyName, LuaTable HuntingList)
            Using a list of mob lists, you can add more than one mob to a party's hunt list at once.
            Only the first call of this function will take effect as to stop duplicate calls due to multiple quest instances.
            Table format: {{Mob Name, Amount},{Repeat as many times as necessary}}
            Example: {{"zombie",1},{"skeleton",20}}
            Automatically deletes the party upon completion.
            Also stops the script until this objective is complete.


Ijwu Version 1:
    Bugs fixed:
        Spamming of player upon entry of any quest region defined after the first.
        Fixed a bug in TakeItem().
        Fixed a bug in GetXYWallPercentage().
        Fixed a bug in WallEdit().
        When a player leaves their open quest threads and quests will now close properly, to prevent memory leaks. (I think.)
        Probably more that I can't remember.

    Functions Added:
        GetTile(int x, int y) : returns TileData2
            Get's a TileData2 object which contains all of a tile's data.
            Credit to Olink for the basic idea for the struct. It came from his Schematics plugin source.

        SetTile(int x, int y, TileData2 data)
            Sets the specified tile to have the data provided.

        CheckEmpty(int x, int y) : returns bool
            Returns true the specified tile has neither a tile nor a wall on it. Otherwise returns false.

        BuffPlayer(string buffname, QPlayer Player, int time)
            Buffs the specified player using standard buff name lookup for [time] seconds.

        CheckDay() : returns bool
            Returns true if it is daytime.

        CheckTime(double time, int range, bool dayTime = true) : returns bool
            Checks the game time for any time withing [range] of [time].
                Example: CheckTime(27000, 10000, true);
            This will return true if the time is anywhere between 17000 and 37000 and Main.dayTime == true.
            If dayTime = true then this will apply to Main.dayTime == true, if false then it will apply Main.dayTime == false.

        HealPlayer(QPlayer Player)
            Heals the specified player.
            This comes almost directly out of the TShockAPI source. Thanks to the team behind TShock.